
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

/* For use in src/lib/core/theming/_palette.scss */
$primary: (
    50 : #eee6fc,
    100 : #d5bff6,
    200 : #b995f1,
    300 : #9c6beb,
    400 : #874be6,
    500 : #722be2,
    600 : #6a26df,
    700 : #5f20da,
    800 : #551ad6,
    900 : #4210cf,
    A100 : #fdfcff,
    A200 : #d5c9ff,
    A400 : #ae96ff,
    A700 : #9a7dff,
    contrast: (50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);


$chennai_exports-primary: mat.define-palette($primary);
$chennai_exports-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$chennai_exports-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$chennai_exports-theme: mat.define-light-theme((
  color: (
    primary: $chennai_exports-primary,
    accent: $chennai_exports-accent,
    warn: $chennai_exports-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($chennai_exports-theme);

/* You can add global styles to this file, and also import other style files */

@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";
@import "scss/app.scss";

html,
body {
    height: 100%;
}

body {
    margin: 0;
    font-family: 'Inter', sans-serif;
    background: rgb(244 244 244);
}

::-webkit-scrollbar {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 3px;
    border-radius: 1rem;
}

::-webkit-scrollbar-track {
    width: 3px;
    background-color: #ccc;
}

::-webkit-scrollbar-thumb {
    width: 3px;
    background-color: #722BE2;
}

@layer components {
    
    .button-add {
        @apply w-22 h-8.5 bg-white border rounded-md border-grey-dc text-center text-black text-xs
    }
}

@layer utilities {

    .dc-button {
        display: inline-block;
        min-width: 90px;
        height: 34px;
        line-height: 34px;
        // color: #fff;
        text-align: center;
        padding: 0 14px;
        font-size: 14px;
        font-weight: 400;
    }
}

